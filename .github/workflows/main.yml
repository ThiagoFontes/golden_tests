# This is a basic workflow to help you get started with Actions

name: Run tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch

on:
  push:
  pull_request:
    types: [created]
  release:
    types: [created]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
          
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    
    - name: Install dependencies
      run: |
        flutter -v
        flutter pub get
    
    - name: Install gem
      run: |
        sudo gem install bundler
              
    - name: Install Android dependencies
      run: |
        cd android
        bundle update --bundler
        bundle install
        
    - name: Fastlane Action
      uses: maierj/fastlane-action@v1.4.0
      with:
        lane: 'homologacao'
        subdirectory: 'android'
  #- name: Flutter action
    #  uses: subosito/flutter-action@v1.3.2
    #  with: 
    #    flutter-version: 1.17.0

    
    #- name: Flutter version
    #  run: flutter --version
      
    #- name: Run a multi-line script
    #  run: |
    #    flutter pub get
    #    flutter test
   
    - name: Production
      if: ${{ !github.event.release.prerelease }} && || github.event_name == "release"
      run: echo "Ready!"
      
    - name: HG Build
      if: (${{ github.event.release.prerelease }}) || github.event_name == "pull"
      run: echo "HG!"
      
    - name: Getting event_name
      env:
        GITHUB_CONTEXT: ${{ github.event_name }}
      run: |
        echo "${{ github.event.release.prerelease }}"
        echo "$GITHUB_CONTEXT"
